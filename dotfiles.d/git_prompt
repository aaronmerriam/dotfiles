#!/usr/bin/env zsh
#-------------------------------------------------------
# git_info()
#-------------------------------------------------------
git_info() {
  check_git || return
  git_dir=$(git rev-parse --git-dir 2> /dev/null)
  
  case $1 in
  -b | --branch)
    if [[ -d "$git_dir/rebase-apply" ]] ; then
      branch="$(git symbolic-ref HEAD 2>/dev/null)"
    elif [[ -f "$git_dir/rebase-merge/interactive" ]] ; then
      branch="$(cat $git_dir/rebase-merge/head-name)"
    elif [[ -d "$git_dir/rebase-merge" ]] ; then
      branch="$(cat $git_dir/rebase-merge/head-name)"
    elif [[ -f "$git_dir/MERGE_HEAD" ]] ; then
      branch="$(git symbolic-ref HEAD 2>/dev/null)"
    else
      branch="$(git symbolic-ref HEAD 2>/dev/null)" || \
        branch="$(git describe --exact-match HEAD 2>/dev/null)" || \
        branch="$(cut -c1-7 $git_dir/HEAD)..."
    fi
    echo "${branch#refs/heads/}"
    return 1
    ;;
  -d | --dirty)
    git diff --no-ext-diff --ignore-submodules --quiet --exit-code || echo '*'
    return 1
    ;;
  -g | --dir | --git-dir)
    echo $git_dir
    return 1
    ;;
  *)
    echo 'no help for you'
    return 1
    ;;
  esac
}

#-------------------------------------------------------
#   git_prompt - Overview
#-------------------------------------------------------
#   Thanks 
#   http://sebastiancelis.com/2009/nov/16/zsh-prompt-git-users/

# Enable auto-execution of functions.
typeset -ga precmd_functions
typeset -ga chpwd_functions
 
# Append git functions needed for prompt.
precmd_functions+='pre_update_git_vars'
chpwd_functions+='update_current_git_vars'
 
update_current_git_vars() {
  unset __CURRENT_GIT_BRANCH
  unset __CURRENT_GIT_DIRTY
  
  check_git || return
  
  __CURRENT_GIT_BRANCH="$(git_info -b)"
  __CURRENT_GIT_DIRTY="$(git_info -d)"
}

prompt_git_info() {
  check_git || return

  printf "%s" "(%{$PR_LIGHT_YELLOW%}$__CURRENT_GIT_BRANCH%{$PR_LIGHT_RED%}$__CURRENT_GIT_DIRTY%{$PR_NO_COLOR%})"
}

pre_update_git_vars() {
  check_git || return

  update_current_git_vars
}

check_git() {
  test "$(git rev-parse --is-inside-work-tree 2>/dev/null)" = true
}

update_current_git_vars

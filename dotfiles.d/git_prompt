#!/usr/bin/env zsh
#-------------------------------------------------------
# get_git_prompt_info()
#-------------------------------------------------------
# This function returns info on the current git
# branch. It takes a string with printf-like
# arguments:
# '%P' path to top of repository
# '%p' path to top of repository, with s/$HOME/~/
# '%b' current branch
# '%s' state of rebase/merge/bisect/am
# '%%' a '%' character
# Providing no arguments is equivalent to "%p %b %s"
#-------------------------------------------------------
get_git_prompt_info() {
  local def fmt res
  def='%p %b %s'
  fmt=$@
  res=${fmt:-$def}
  res=${res//\%P/$__ZSH_GIT_FULL_DIR}
  res=${res//\%p/$__ZSH_GIT_DIR}
  res=${res//\%b/$__ZSH_GIT_BRANCH}

  local state="$__ZSH_GIT_STATE"
  if [[ -n "$state" ]] ; then
    state=":${state} "

  # NOTE: This code take a long time to execute on large repos,
  # but can show if the repo is dirty or not. It cannot be
  # cached because it's too hard to figure out which commands
  # change this state. Enable it if you work on only small
  # repositories.
  elif ! git diff --quiet || [[ -n $(git ls-files --others --exclude-standard) ]] ; then
    state=":dirty"
  fi
  
  res=${res//\%s/$state}
  res=${res//\%%/%}
  echo -n "${res}"
}

#-------------------------------------------------------
#   git_prompt - Overview
#-------------------------------------------------------
#   Thanks 
#   http://sebastiancelis.com/2009/nov/16/zsh-prompt-git-users/

# Enable auto-execution of functions.
typeset -ga precmd_functions
typeset -ga chpwd_functions
 
# Append git functions needed for prompt.
precmd_functions+='pre_update_git_vars'
chpwd_functions+='update_current_git_vars'
 
update_current_git_vars() {
  unset __CURRENT_GIT_BRANCH
  unset __CURRENT_GIT_BRANCH_STATUS

  local st="$(git status 2>/dev/null)"
  if [[ -n "$st" ]]; then
    local -a arr
    arr=(${(f)st})

    if [[ $arr[1] =~ 'Not currently on any branch.' ]]; then
      __CURRENT_GIT_BRANCH='no-branch'
    else
      __CURRENT_GIT_BRANCH="${arr[1][(w)4]}";
    fi

    if [[ ! $st =~ 'nothing to commit' ]]; then
      __CURRENT_GIT_BRANCH_STATUS='*'
    fi
  fi
}

prompt_git_info() {
  if [ -n "$__CURRENT_GIT_BRANCH" ]; then
    printf "%s" "(%{$PR_LIGHT_YELLOW%}$__CURRENT_GIT_BRANCH%{$PR_LIGHT_RED%}$__CURRENT_GIT_BRANCH_STATUS%{$PR_NO_COLOR%})"
  fi
}

pre_update_git_vars() {
  if [ "$(git rev-parse --is-inside-work-tree 2>/dev/null)" ]; then
    update_current_git_vars
  fi
}

update_current_git_vars
